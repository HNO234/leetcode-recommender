difficulties = [('0', 'Any Difficulty'), ('1', 'Easy'),
                ('2', 'Medium'), ('3', 'Hard')]
tags = [('any', 'Any Tag'), ('array', 'array'), ('backtracking', 'backtracking'), ('biconnected component', 'biconnected component'), ('binary indexed tree', 'binary indexed tree'), ('binary search', 'binary search'), ('binary search tree', 'binary search tree'), ('binary tree', 'binary tree'), ('bit manipulation', 'bit manipulation'), ('bitmask', 'bitmask'), ('brainteaser', 'brainteaser'), ('breadth-first search', 'breadth-first search'), ('bucket sort', 'bucket sort'), ('combinatorics', 'combinatorics'), ('counting', 'counting'), ('counting sort', 'counting sort'), ('data stream', 'data stream'), ('depth-first search', 'depth-first search'), ('design', 'design'), ('divide and conquer', 'divide and conquer'), ('doubly-linked list', 'doubly-linked list'), ('dynamic programming', 'dynamic programming'), ('enumeration', 'enumeration'), ('eulerian circuit', 'eulerian circuit'), ('game theory', 'game theory'), ('geometry', 'geometry'), ('graph', 'graph'), ('greedy', 'greedy'), ('hash function', 'hash function'), ('hash table', 'hash table'), ('heap (priority queue)', 'heap (priority queue)'), ('interactive', 'interactive'), ('iterator', 'iterator'), ('line sweep', 'line sweep'),
        ('linked list', 'linked list'), ('math', 'math'), ('matrix', 'matrix'), ('memoization', 'memoization'), ('merge sort', 'merge sort'), ('minimum spanning tree', 'minimum spanning tree'), ('monotonic queue', 'monotonic queue'), ('monotonic stack', 'monotonic stack'), ('number theory', 'number theory'), ('ordered set', 'ordered set'), ('prefix sum', 'prefix sum'), ('probability and statistics', 'probability and statistics'), ('queue', 'queue'), ('quickselect', 'quickselect'), ('radix sort', 'radix sort'), ('randomized', 'randomized'), ('recursion', 'recursion'), ('rejection sampling', 'rejection sampling'), ('reservoir sampling', 'reservoir sampling'), ('rolling hash', 'rolling hash'), ('segment tree', 'segment tree'), ('shortest path', 'shortest path'), ('simulation', 'simulation'), ('sliding window', 'sliding window'), ('sorting', 'sorting'), ('stack', 'stack'), ('string', 'string'), ('string matching', 'string matching'), ('strongly connected component', 'strongly connected component'), ('suffix array', 'suffix array'), ('topological sort', 'topological sort'), ('tree', 'tree'), ('trie', 'trie'), ('two pointers', 'two pointers'), ('union find', 'union find')]
all_difficulties = '1,2,3'
all_tags = "'array','backtracking','biconnected component','binary indexed tree','binary search','binary search tree','binary tree','bit manipulation','bitmask','brainteaser','breadth-first search','bucket sort','combinatorics','counting','counting sort','data stream','depth-first search','design','divide and conquer','doubly-linked list','dynamic programming','enumeration','eulerian circuit','game theory','geometry','graph','greedy','hash function','hash table','heap (priority queue)','interactive','iterator','line sweep','linked list','math','matrix','memoization','merge sort','minimum spanning tree','monotonic queue','monotonic stack','number theory','ordered set','prefix sum','probability and statistics','queue','quickselect','radix sort','randomized','recursion','rejection sampling','reservoir sampling','rolling hash','segment tree','shortest path','simulation','sliding window','sorting','stack','string','string matching','strongly connected component','suffix array','topological sort','tree','trie','two pointers','union find'"
